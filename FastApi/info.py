def college985():
    return ['中国科学技术大学', '清华大学', '北京大学', '中国人民大学', '北京航空航天大学', '北京师范大学', '北京理工大学', '中国农业大学', '中央民族大学', '厦门大学', '兰州大学', '中山大学', '华南理工大学', '哈尔滨工业大学', '武汉大学', '华中科技大学', '中南大学', '湖南大学',
            '国防科技大学', '吉林大学', '南京大学', '东南大学', '大连理工大学', '东北大学', '山东大学', '中国海洋大学', '西安交通大学', '西北工业大学', '西北农林科技大学', '复旦大学', '上海交通大学', '同济大学', '华东师范大学', '四川大学', '电子科技大学', '南开大学', '天津大学', '浙江大学', '重庆大学']


def college211():
    return ['北京大学', '中国人民大学', '清华大学', '北京交通大学', '北京工业大学', '北京航空航天大学', '北京理工大学', '北京科技大学', '北京化工大学', '北京邮电大学', '中国农业大学', '北京林业大学', '北京中医药大学', '北京师范大学', '北京外国语大学', '中国传媒大学', '中央财经大学', '对外经济贸易大学', '北京体育大学', '中央音乐学院', '中央民族大学', '中国政法大学', '华北电力大学', '南开大学', '天津大学', '天津医科大学', '河北工业大学', '太原理工大学', '内蒙古大学', '辽宁大学', '大连理工大学', '东北大学', '大连海事大学', '吉林大学', '延边大学', '东北师范大学', '哈尔滨工业大学', '哈尔滨工程大学', '东北农业大学', '东北林业大学', '复旦大学', '同济大学', '上海交通大学', '华东理工大学', '东华大学', '华东师范大学', '上海外国语大学', '上海财经大学', '上海大学', '第二军医大学', '南京大学', '苏州大学', '东南大学', '南京航空航天大学',
            '南京理工大学', '中国矿业大学', '河海大学', '江南大学', '南京农业大学', '中国药科大学', '南京师范大学', '浙江大学', '安徽大学', '中国科学技术大学', '合肥工业大学', '厦门大学', '福州大学', '南昌大学', '山东大学', '中国海洋大学', '中国石油大学', '郑州大学', '武汉大学', '华中科技大学', '中国地质大学', '武汉理工大学', '华中农业大学', '华中师范大学', '中南财经政法大学', '湖南大学', '中南大学', '湖南师范大学', '国防科学技术大学', '中山大学', '暨南大学', '华南理工大学', '华南师范大学', '广西大学', '海南大学', '四川大学', '西南交通大学', '电子科技大学', '四川农业大学', '西南财经大学', '重庆大学', '西南大学', '贵州大学', '云南大学', '西藏大学', '西北大学', '西安交通大学', '西北工业大学', '西安电子科技大学', '长安大学', '西北农林科技大学', '陕西师范大学', '第四军医大学', '兰州大学', '青海大学', '宁夏大学', '新疆大学', '石河子大学']


def province():
    return ['北京', '天津', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '上海', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '重庆', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '台湾', '香港', '澳门']


def tel_pattern():
    return r'1[3-9]\d{1}[\s|-]?\d{4}[\s|-]?\d{4}'


def email_pattern():
    return r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}'


def chinese_str():
    return r'^[\u4e00-\u9fa5]{2,4}$'


def birth_pattern():
    return r'((19\d{2}|200[0-7])[-./年\s]((1[0-2])|(0?[1-9]))[-./月\s](([12]\d)|(3[01])|(0?[1-9]))日?)|(19\d{2}|200[0-7])[-./年\s]((1[0-2])|(0?[1-9]))[-./月\s]?'


def age_pattern():
    return r'年龄[:： ](\d{2})岁?|\b(\d{2})岁\b'


def edu_pattern():
    return r'小学|初中|高中|中专|大专|本科|学士|硕士|博士'


def edu_map():
    return {'': 0, '小学': 1, '初中': 2, '中专': 3, '高中': 4, '大专': 5, '本科': 6, '学士': 7, '硕士': 8, '博士': 9}


def self_ability():
    return [['CET-6', '英语四/六级', '英语六级', 'CET6', 'CET-4/6'], ['CET-4', 'CET4', '英语四级'], ['PS', 'PhotoShop', 'Photoshop', 'photoshop', 'PHOTOSHOP', 'Ps'], ['Office', 'office', 'Word', 'word', 'PPT', 'ppt', 'PowerPoint', 'EXCEL', 'excel'], ['计算机二级', '计算机一级', '计算机等级']]


def company_endword():
    return ['公司', '教育', '集团', '连锁', '协会', '会所', '国际', '医院', '厂', '局', '科技', '基地', '店', '院', '校', '所', '中心', '网络', '室', '银行', '项目组', '研究会']


def college_endword():
    return ['院', '校', '学', '所', '部']


def score_map():
    return {'': 0, '小学': 0, '初中': 0, '中专': 3, '高中': 6, '大专': 10, '本科': 13, '学士': 13, '硕士': 17, '博士': 21, 'CET4': 1, 'CET6': 2, 'NCRE': 1, '211': 3, '985': 5}


def job_obj_keywords():
    return ['求职意向', '应聘岗位', '求职岗位', '应聘意向', '应聘职位']


def work_time():
    return r'(\d{4}(?:\.\d{1,2}|年\d{1,2}|年|年\d{1,2}月)?)\s*[ -至]\s*(\d{4}(?:\.\d{1,2}|年\d{1,2}|年|年\d{1,2}|年\d{1,2}月)?|今|至今)'


def job_fit():
    # [<岗位名称>, <最低学历要求>, <最低工作年限>, <是否要求office能力>, <最低年龄要求>]
    return {0: ['暂无', '', -1, False, -1], 1: ['产品运营', '', 2, False, -1], 2: ['平面设计师', '大专', 1, False, -1], 3: ['财务', '本科', -1, False, -1],
            4: ['市场营销', '本科', 10, True, -1], 5: ['项目主管', '本科', 3, True, -1], 6: ['开发工程师', '本科', 3, False, -1], 7: ['文员', '大专', 1, True, 25],
            8: ['电商运营', '', 2, False, -1], 9: ['人力资源管理', '大专', 2, False, -1], 10: ['风控专员', '硕士', 5, False, -1]}


def birth_pattern():
    return r'((19\d{2}|200[0-7])[-./年\s]((1[0-2])|(0?[1-9]))[-./月\s](([12]\d)|(3[01])|(0?[1-9]))日?)|(19\d{2}|200[0-7])[-./年\s]((1[0-2])|(0?[1-9]))[-./月\s]?'


def age_pattern():
    return r'年龄[:： ](\d{2})岁?|\b(\d{2})岁\b'


def edu_pattern():
    return r'小学|初中|高中|中专|大专|本科|学士|硕士|博士'


def edu_map():
    return {'': 0, '小学': 1, '初中': 2, '中专': 3, '高中': 4, '大专': 5, '本科': 6, '学士': 7, '硕士': 8, '博士': 9}


def self_ability():
    return [['CET-6', '英语四/六级', '英语六级', 'CET6', 'CET-4/6'], ['CET-4', 'CET4', '英语四级'], ['PS', 'PhotoShop', 'Photoshop', 'photoshop', 'PHOTOSHOP', 'Ps'], ['Office', 'office', 'Word', 'word', 'PPT', 'ppt', 'PowerPoint', 'EXCEL', 'excel'], ['计算机二级', '计算机一级', '计算机等级']]


def company_endword():
    return ['公司', '教育', '集团', '连锁', '协会', '会所', '国际', '医院', '厂', '局', '科技', '基地', '店', '院', '校', '所', '中心', '网络', '室', '银行', '项目组', '研究会']


def college_endword():
    return ['院', '校', '学', '所', '部']


def score_map():
    return {'': 0, '小学': 0, '初中': 0, '中专': 3, '高中': 6, '大专': 10, '本科': 13, '学士': 13, '硕士': 17, '博士': 21, 'CET4': 1, 'CET6': 2, 'NCRE': 1, '211': 3, '985': 5}


def job_obj_keywords():
    return ['求职意向', '应聘岗位', '求职岗位', '应聘意向', '应聘职位']


def work_time():
    return r'(\d{4}(?:\.\d{1,2}|年\d{1,2}|年|年\d{1,2}月)?)\s*(?:-|至|--)\s*(\d{4}(?:\.\d{1,2}|年\d{1,2}|年|年\d{1,2}|年\d{1,2}月)?|今|至今)'


def job_fit():
    # [<岗位名称>, <最低学历要求>, <最低工作年限>, <是否要求office能力>, <最低年龄要求>]
    return {0: ['暂无', '', -1, False, -1], 1: ['产品运营', '', 2, False, -1], 2: ['平面设计师', '大专', 1, False, -1], 3: ['财务', '本科', -1, False, -1],
            4: ['市场营销', '本科', 10, True, -1], 5: ['项目主管', '本科', 3, True, -1], 6: ['开发工程师', '本科', 3, False, -1], 7: ['文员', '大专', 1, True, 25],
            8: ['电商运营', '', 2, False, -1], 9: ['人力资源管理', '大专', 2, False, -1], 10: ['风控专员', '硕士', 5, False, -1]}